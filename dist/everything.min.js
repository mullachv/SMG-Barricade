var gameLogic;!function(a){function b(){return[["","","","","","","","","W","","","","","","","",""],["0","0","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0"],["0","","","","","","","","","","","","","","","","0"],["0","0","0","0","0","0","0","0","1","0","0","0","0","0","0","0","0"],["","","","","","","","","1","","","","","","","",""],["","","","","","","0","0","1","0","0","","","","","",""],["","","","","","","0","","","","0","","","","","",""],["","","","","0","0","1","0","0","0","1","0","0","","","",""],["","","","","0","","","","","","","","0","","","",""],["","","0","0","0","0","0","0","0","0","0","0","0","0","0","",""],["","","0","","","","0","","","","0","","","","0","",""],["1","0","0","0","1","0","0","0","1","0","0","0","1","0","0","0","1"],["0","","","","0","","","","0","","","","0","","","","0"],["0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],["","R","R","R","","G","G","G","","","","","","","","",""],["","R","","R","","G","","G","","","","","","","","",""]]}function c(a){return a[0][8]}function d(a,b,c,e,f,g){if(0===b)return[[c,e]];if("1"===a[c][e]||0>b)return[];var h=[],i=[],j=[],k=[],l=[];return c-1>=0&&c-1!==f&&""!==a[c-1][e]&&(j=d(a,b-1,c-1,e,c,e)),13>=c+1&&c+1!==f&&""!==a[c+1][e]&&(k=d(a,b-1,c+1,e,c,e)),e-1>=0&&e-1!==g&&""!==a[c][e-1]&&(h=d(a,b-1,c,e-1,c,e)),16>=e+1&&e+1!==g&&""!==a[c][e+1]&&(i=d(a,b-1,c,e+1,c,e)),l=h.concat(i,j,k)}function e(a,b,c,e,f,g){f>=14&&(f=13,g=4*Math.floor(g/4)+2,b-=1);for(var h=d(a,b,f,g,-1,-1),i=0;i<h.length;i+=1)if(c===h[i][0]&&e===h[i][1])return!0;return!1}function f(a,b){var c,d="R"===b?0:"G"===b?1:"Y"===b?2:3,e=15,f=4*d+1;if("0"===a[e][f])return[e,f];if("0"===a[e][f+2])return[e,f+2];for(e-=1,c=f+3,e;c>f;f+=1)if("0"===a[e][f])return[e,f];throw new Error("Possible cheating on the number of the pawns")}function g(a,d,g,h,i,j,k){void 0===a&&(a=b());var l,m,n,o,p,q=0===k?"R":"G";if(n=c(a),"W"!==n&&"1"!==n)throw new Error("Can only make a move if the game is not over!");if(a[i][j]!==q)throw new Error("One can only move his own pawn!");if(a[g][h]===q)throw new Error("One cannot arrive on a place with his own pawn!");if(!e(a,d,g,h,i,j))throw new Error("One cannot go through a barricade or move steps different from the dice value!");return l=angular.copy(a),l[i][j]="0",l[g][h]=q,"0"===a[g][h]||"W"===a[g][h]?(n=c(l),m="W"!==n&&"1"!==n?{endMatch:{endMatchScores:"R"===n?[1,0]:[0,1]}}:{setTurn:{turnIndex:1-k}}):"1"===a[g][h]?(n=c(l),m="W"!==n&&"1"!==n?{endMatch:{endMatchScores:"R"===n?[1,0]:[0,1]}}:{setTurn:{turnIndex:k}}):(o=a[g][h],p=f(a,o),l[p[0]][p[1]]=o,m={setTurn:{turnIndex:1-k}}),[m,{set:{key:"type",value:"normal"}},{set:{key:"board",value:l}},{set:{key:"delta",value:{to_row:g,to_col:h,from_row:i,from_col:j}}},{set:{key:"dice",value:d}}]}function h(a,b,c,d){if(void 0===a)throw new Error("Cannot place barricade");if("0"!==a[b][c])throw new Error("One can only place barricade at an empty place!");if(b>13||0>b||0>c||c>16)throw new Error("One cannot only place barricade in the base");var e=angular.copy(a);return e[b][c]="1",[{setTurn:{turnIndex:1-d}},{set:{key:"type",value:"barricade"}},{set:{key:"board",value:e}},{set:{key:"delta",value:{to_row:b,to_col:c}}},{set:{key:"dice",value:-1}}]}function i(a,b,c,d,e,f,i,j){return"normal"===b?g(a,c,d,e,f,i,j):h(a,d,e,j)}function j(a,b){var c=[{setTurn:{turnIndex:b}},{set:{key:"type",value:"dice"}}];return void 0===a&&(a=null),c.push({setRandomInteger:{key:"dice",from:1,to:7}}),c}function k(a,c,d){return void 0===a&&(a=b()),[{setTurn:{turnIndex:1-d}},{set:{key:"type",value:"normal"}},{set:{key:"board",value:a}},{set:{key:"delta",value:{}}},{set:{key:"dice",value:c}}]}function l(a){var b,c,d,e,f,g,h,l,m,n=a.move,o=a.turnIndexBeforeMove,p=a.stateBeforeMove;try{if(b=n[1].set.value,"dice"===b){if(c=p.dice,d=j(c,o),!angular.equals(n,d))return!1}else if(e=n[3].set.value,c=n[4].set.value,f=p.board,"normal"===b&&0===Object.keys(e).length?d=k(f,c,o):(g=e.to_row,h=e.to_col,l=e.from_row,m=e.from_col,d=i(f,b,c,g,h,l,m,o)),!angular.equals(n,d))return!1}catch(q){return!1}return!0}function m(a,b,c,e){var f,g,h,l,m,n=0===e?"R":"G";if("normal"===b){for(f=0;16>f;f+=1)for(g=0;17>g;g+=1)if(a[f][g]===n){if(f>=14?(h=13,l=4*Math.floor(g/4)+2,m=d(a,c-1,h,l,-1,-1)):m=d(a,c,f,g,-1,-1),0!==m.length)return i(a,"normal",c,m[0][0],m[0][1],f,g,e);if(f>=14)break}return k(a,c,e)}if("barricade"!==b)return j(c,e);for(f=13;f>0;f-=1)for(g=0;17>g;g+=1)if("0"===a[f][g])return i(a,"barricade",c,f,g,-1,-1,e)}a.getInitialBoard=b,a.getPossibleDestination=d,a.createMove=i,a.createDiceMove=j,a.createPassMove=k,a.isMoveOk=l,a.getRandomPossibleMove=m}(gameLogic||(gameLogic={}));var game;!function(a){function b(){console.log("Translation of 'BARRICADE_GAME' is "+translate("BARRICADE_GAME")),resizeGameAreaService.setWidthToHeight(1.0625),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:n}),y=document.getElementById("gameArea"),dragAndDropService.addDragListener("gameArea",d)}function c(a,b,c){var d;a>13?(a=13,b=4*Math.floor(b/4)+2,d=gameLogic.getPossibleDestination(q,r-1,a,b,-1,-1)):d=gameLogic.getPossibleDestination(q,r,a,b,-1,-1);for(var e=0;e<d.length;e++)document.getElementById("e2e_test_div_"+d[e][0]+"x"+d[e][1]).style.border=c?"#0000cc 1px dashed":"none"}function d(a,b,d){var e=b-y.offsetLeft,j=d-y.offsetTop;if(0>e||0>j||e>=y.clientWidth||j>=y.clientHeight){if(!C)return;var k=g();f({top:j-k.height/2,left:e-k.width/2},s),"touchend"===a&&("normal"===s&&c(B.row,B.col,!1),"barricade"===s&&(C.style.display="none"))}else{var l=Math.floor(A*e/y.clientWidth),m=Math.floor(z*j/y.clientHeight);if("touchstart"!==a||B||(q[m][l]===u&&v&&"normal"===s?(B={row:m,col:l},C=document.getElementById("e2e_test_piece"+u+"_"+m+"x"+l),console.log("dragging piece: "+C),console.log("my piece: "+u),C.style["z-index"]=++D,c(m,l,!0)):v&&"barricade"===s?(B={row:m,col:l},C=document.getElementById("spareBarricade"),f(h(m,l),"barricade"),C.style["z-index"]=60,C.style.display="inline"):8!==m||15!==l&&16!==l||(B={row:m,col:l},C=document.getElementById("e2e_test_btn"))),!C)return;if("touchend"===a){var n=B,p={row:m,col:l};8!==m||15!==l&&16!==l?i(n,p):("normal"===s&&c(B.row,B.col,!1),o())}else f(h(m,l),s)}("touchend"===a||"touchcancel"===a||"touchleave"===a)&&(f(h(B.row,B.col),s),"touchend"!==a&&"normal"===s&&c(B.row,B.col,!1),"touchend"!==a&&"barricade"===s&&(C.style.display="none"),B=null,C=null)}function e(a){var b=g(),c=Math.floor(a.top/b.height),d=Math.floor(a.left/b.width);return 0>c||c>13||0>d||d>16||""===q[c][d]}function f(a,b){var c,d=B.row,f=B.col;e(a)||(c="barricade"===b?h(0,0):h(d,f),C.style.left=a.left-c.left+"px",C.style.top=a.top-c.top+"px")}function g(){return{width:y.clientWidth/A,height:y.clientHeight/z}}function h(a,b){var c=g();return{top:a*c.height,left:b*c.width}}function i(a,b){var d="Dragged piece "+a.row+"x"+a.col+" to square "+b.row+"x"+b.col;if(console.log(d),w=d,!v)return void console.log("Not your turn, so not updating the board");try{v=!1,"normal"===s?(c(a.row,a.col,!1),gameService.makeMove(gameLogic.createMove(q,"normal",r,b.row,b.col,a.row,a.col,x)),"1"===q[b.row][b.col]&&(B={row:b.row,col:b.col},C=document.getElementById("spareBarricade"),f(h(b.row,b.col),"barricade"),C.style["z-index"]=0,C.style.display="inline")):"barricade"===s&&(C.style.display="none",gameService.makeMove(gameLogic.createMove(q,"barricade",r,b.row,b.col,-1,-1,x)))}catch(e){console.log(["Illegal Move",s,r,a.row,a.col,b.row,b.col]),v=!0,f(h(B.row,B.col),s)}}function j(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function k(){gameService.makeMove(aiService.createComputerMove(q,"normal",r,x))}function l(){gameService.makeMove(aiService.createComputerMove(q,"barricade",-1,x))}function m(){gameService.makeMove(gameLogic.createDiceMove(r,x))}function n(a){var b=a.stateAfterMove.type;q=a.stateAfterMove.board,t=a.stateAfterMove.delta,r=a.stateAfterMove.dice;var c;switch(a.yourPlayerIndex){case 0:c="R";break;case 1:c="G";break;case 2:c="Y";break;case 3:c="B"}u=c,console.log("my piece: "+u),void 0===q&&(q=gameLogic.getInitialBoard()),v=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove&&null===a.endMatchScores,x=a.turnIndexAfterMove,a.turnIndexBeforeMove!==a.turnIndexAfterMove?(r=null,s="dice"):s="normal"===b?"barricade":"normal",v&&""===a.playersInfo[a.yourPlayerIndex].playerId?(v=!1,r?"normal"===s?$timeout(k,500):"barricade"===s&&$timeout(l,500):$timeout(m,500)):v&&(r||$timeout(m,500));var d=document.getElementById("e2e_test_dice");if("dice"===b&&(d.className="spinIn"),"dice"===s&&(d.className="spinOut"),t){var e,f=t.from_row,g=t.from_col,i=t.to_row,j=t.to_col,n=h(f,g),o=h(i,j);"normal"===b?(e=document.getElementById("e2e_test_piece"+c+"_"+f+"x"+g),null!==e&&(e.className="fadeout",e.style.top=n.top-o.top+"px",e.style.left=n.left-o.left+"px",e.className="slowlyAppear")):"barricade"===b&&(e=document.getElementById("e2e_test_piece1_"+i+"x"+j),null!==e?(e.style.top=n.top-o.top+"px",e.style.left=n.left-o.left+"px",e.className="slowlyAppear"):console.log(["fail to catch barricade",i,j]))}}function o(){if("?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(v&&r&&"normal"===s)try{v=!1,gameService.makeMove(gameLogic.createPassMove(q,r,x))}catch(a){return void console.log(["Illegal pass move"])}}function p(a,b,c){var d=4*a+2;return 13===b&&c===d||14===b&&(c===d-1||c===d||c===d+1)||15===b&&(c===d-1||c===d+1)}var q,r,s,t,u,v,w,t,x,y=document.getElementById("gameArea"),z=16,A=17,B=null,C=null,D=61;a.init=b,a.rows=j(z),a.cols=j(A),z=z,A=A;var E=null,F=null;a.cellClicked=function(b,c){if("?throwException"===window.location.search)throw new Error("Throwing the error because URL has '?throwException'");if(v&&r)if("normal"===s){if(null===E||null===F)return void(a.shouldShowImage(b,c)&&"W"!==q[b][c]&&"0"!==q[b][c]&&(E=b,F=c,console.log(["Choose a pawn:",b,c])));try{v=!1,console.log(["Choose a destination",b,c]),gameService.makeMove(gameLogic.createMove(q,"normal",r,b,c,E,F,x)),E=null,F=null}catch(d){return console.log(["Illegal move to ",b,c," from ",E,F]),v=!0,E=null,void(F=null)}}else if("barricade"===s){(null===E||null===F)&&(console.log(["Place a barricade at:",b,c]),E=null,F=null);try{v=!1,console.log(["Choose a position",b,c]),gameService.makeMove(gameLogic.createMove(q,"barricade",r,b,c,-1,-1,x))}catch(d){return console.log(["Illegal to place a barricade at:",b,c]),void(v=!0)}}},a.shouldShowImage=function(a,b){var c=q[a][b];return""!==c},a.isWinSpot=function(a,b){return"W"===q[a][b]},a.isPieceR=function(a,b){return"R"===q[a][b]},a.isPieceG=function(a,b){return"G"===q[a][b]},a.isPieceB=function(a,b){return"B"===q[a][b]},a.isPieceY=function(a,b){return"Y"===q[a][b]},a.isBarricade=function(a,b){return"1"===q[a][b]},a.isEmptySpot=function(a,b){return"0"===q[a][b]},a.isRedStart=function(a,b){return p(0,a,b)},a.isGreenStart=function(a,b){return p(1,a,b)},a.isYellowStart=function(a,b){return p(2,a,b)},a.isBlueStart=function(a,b){return p(3,a,b)},a.isNormalSpot=function(b,c){return!(a.isWinSpot(b,c)||a.isRedStart(b,c)||a.isGreenStart(b,c)||a.isYellowStart(b,c)||a.isBlueStart(b,c))},a.getDiceSrc=function(){switch(r){case 1:return"imgs/1.png";case 2:return"imgs/2.png";case 3:return"imgs/3.png";case 4:return"imgs/4.png";case 5:return"imgs/5.png";case 6:return"imgs/6.png";default:return""}},a.shouldSlowlyAppear=function(a,b){return void 0!==t&&t.to_row===a&&t.to_col===b}}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{BARRICADE_GAME:"Barricade",PASS:"Pass",RULES_OF_BARRICADE:"Rules of Barricade",CLOSE:"Start Game",RULES_SLIDE0:"Each player's 5 pawns are placed in their houses at the bottom of the board. There are also 11 barricades.",RULES_SLIDE1:"All the players start from the first square in front of their house. Pawns must move according to the exact number thrown.",RULES_SLIDE2:"Pawns move forward, backward or sideways, but they have to maintain the same direction during a single move.",RULES_SLIDE3:"A pawn may pass other pawns, but only one pawn may occupy each square.",RULES_SLIDE4:"In case a square is occupied by another player's pawn, the latter is sent back to its house.",RULES_SLIDE5:"A player may only pass his turn if none of his pawns can be moved the exact number thrown.",RULES_SLIDE6:"Barricades are obstacles that may not be passed. A pawn must land on a barricade in order to remove it.",RULES_SLIDE7:"The player then places the barricade back on another unoccupied square, anywhere on the board except houses.",RULES_SLIDE8:"The winner is the first player to reach the goal square with one of his or her pawns."}),game.init()});var aiService;!function(a){function b(a,b){for(var c=0;16>c;c+=1)for(var d=0;17>d;d+=1)if(a[c][d]===b)return[c,d]}function c(a,b,c,f){return"normal"===b?d(a,c,f):e(a,f)}function d(a,b,c){for(var d=0===c?"R":"G",e=f(a,d),h=[],i=[],j=[],k=0;k<e.length;k++){var l,m=e[k][0],n=e[k][1];if(m>13){var o=13,p=4*Math.floor(n/4)+2;l=gameLogic.getPossibleDestination(a,b-1,o,p,-1,-1)}else l=gameLogic.getPossibleDestination(a,b,m,n,-1,-1);for(var q=0;q<l.length;q++){var r=l[q],s={from:e[k],to:r};switch(a[r[0]][r[1]]){case"1":h.push(s);break;case"W":return gameLogic.createMove(a,"normal",b,0,8,m,n,c);case d:break;case"0":j.push(s);break;default:i.push(s)}}if(m>13)break}var t;if(0!==h.length)t=g(h,b);else if(0!==i.length)t=g(i,b);else{if(0===j.length)return gameLogic.createPassMove(a,b,c);t=g(j,b)}return gameLogic.createMove(a,"normal",b,t.to[0],t.to[1],t.from[0],t.from[1],c)}function e(a,c){var d,e,f=0===c?"R":"G",g=0===c?"G":"R",h=b(a,f),i=b(a,g);if(i[0]>13){if("G"===g){for(d=13;d>0;d-=1)for(e=i[1];e<i[1]+2;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else if("R"===g)for(d=13;d>0;d-=1)for(e=0;4>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else if(h[0]<i[0]){for(d=h[0]+1;14>d;d+=1)for(e=0;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else if(h[0]>i[0]){for(d=i[0]-1;d>0;d-=1)for(e=0;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c);for(d=i[0],e=0;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else if(h[1]<i[1])if(1===h[0]&&i[1]<8){for(d=1;14>d;d+=1)for(e=i[1]+1;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else for(d=1;14>d;d+=1){for(e=i[1]-1;e>h[1];e-=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c);for(e=i[1]+1;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else if(1===h[0]&&i[1]>8){for(d=1;14>d;d+=1)for(e=i[1]-1;e>=0;e-=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}else for(d=i[0];d>0;d-=1){for(e=i[1]+1;e<h[1];e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c);for(e=i[1]-1;e>=0;e-=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}for(d=1;14>d;d+=1)for(e=0;17>e;e+=1)if("0"===a[d][e])return gameLogic.createMove(a,"barricade",-1,d,e,-1,-1,c)}function f(a,b){for(var c=[],d=0;16>d;d+=1)for(var e=0;17>e;e+=1)a[d][e]===b&&c.push([d,e]);if(5!==c.length)throw new Error("Cheating on pieces");return c}function g(a,b){for(var c,d,e=0;e<a.length;e++){var f=a[e],g=f.from,h=f.to,i=1-h[0]/16+(g[0]-h[0])/b+(g[0]>13?.5:0);(!c||i>c)&&(c=i,d=f)}return d}a.createComputerMove=c}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map